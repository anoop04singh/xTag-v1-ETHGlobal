generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
}

model User {
  id                  String         @id @default(cuid())
  nfcId               String         @unique
  smartAccountAddress String         @unique
  encryptedSignerKey  String
  createdAt           DateTime       @default(now())
  updatedAt           DateTime       @updatedAt
  conversations       Conversation[]
  createdSubscriptions Subscription[] @relation("Creator")
  purchases           Purchase[]
}

model Conversation {
  id        String    @id @default(cuid())
  title     String
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  messages  Message[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Message {
  id             String       @id @default(cuid())
  role           String // "user" or "assistant"
  content        String       @db.Text
  conversation   Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)
  conversationId String
  createdAt      DateTime     @default(now())
}

model Subscription {
  id          String     @id @default(cuid())
  name        String
  description String     @db.Text
  prompt      String     @db.Text
  price       Decimal    @db.Decimal(18, 6)
  currency    String     @default("MATIC")
  creator     User       @relation("Creator", fields: [creatorId], references: [id], onDelete: Cascade)
  creatorId   String
  purchases   Purchase[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Purchase {
  id             String       @id @default(cuid())
  user           User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId         String
  subscription   Subscription @relation(fields: [subscriptionId], references: [id], onDelete: Cascade)
  subscriptionId String
  createdAt      DateTime     @default(now())
  txHash         String?

  @@unique([userId, subscriptionId])
}